import React, { useEffect, useState } from 'react';
import { Provider } from 'react-redux';
import { store } from './store';
import ClientDashboard from './ClientDashboard';

interface User {
  role: 'client' | 'admin';
  email?: string;
}

interface Props {
  user?: User;
  token?: string;
}

const App: React.FC<Props> = ({ user, token }) => {
  const [isTokenReady, setIsTokenReady] = useState(false);

  useEffect(() => {
    console.log('üì¶ –ü–æ–ª—É—á–µ–Ω–Ω—ã–µ –ø—Ä–æ–ø—Å—ã –≤ App:', { user, token }); // ‚Üê —Ç–µ–ø–µ—Ä—å —Ç—ã —É–≤–∏–¥–∏—à—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ

    const existingToken = localStorage.getItem('token');

    if (token) {
      if (existingToken !== token) {
        localStorage.setItem('token', JSON.stringify(token));
        console.log('‚úÖ –ù–æ–≤—ã–π —Ç–æ–∫–µ–Ω —Å–æ—Ö—Ä–∞–Ω—ë–Ω –≤ localStorage:', token);
      } else {
        console.log('‚ÑπÔ∏è –¢–æ–∫–µ–Ω —É–∂–µ –∞–∫—Ç—É–∞–ª–µ–Ω –≤ localStorage');
      }
      setIsTokenReady(true);
    } else {
      console.warn('‚ö†Ô∏è –¢–æ–∫–µ–Ω –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω –≤ –ø—Ä–æ–ø—Å–∞—Ö. –ü—Ä–æ–±—É–µ–º –≤–∑—è—Ç—å –∏–∑ localStorage...');

      if (existingToken) {
        console.log('‚úÖ –¢–æ–∫–µ–Ω –Ω–∞–π–¥–µ–Ω –≤ localStorage');
        setIsTokenReady(true);
      } else {
        console.error('‚õî –¢–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∏ –≤ props, –Ω–∏ –≤ localStorage');
        setIsTokenReady(false);
      }
    }
  }, [token]);

  if (!isTokenReady) {
    return <div>üîí –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É.</div>;
  }

  return (
    <Provider store={store}>
      {user ? (
        <ClientDashboard user={{ email: user.email ?? '' }} />
      ) : (
        <div>‚õî –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É</div>
      )}
    </Provider>
  );
};

export default App;
